name: Go

on:
  push:
    tags: 'v*'

env:
  GO_VERSION: 1.17.5

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows]
        arch: [386, amd64, arm64]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Get Version
      id: get_version
      run: echo ::set-output name=APP_VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Build
      id: go_build
      run: |
        CGO_ENABLED=0
        GOOS=${{ matrix.os }}
        GOARCH=${{ matrix.arch }}
        go build -ldflags "-s -w -extldflags -static -extldflags -static" ./...
        tar -czvf fast-qrcode_$APP_VERSION_${{ matrix.os }}_${{ matrix.arch }}.tar.gz fast-qrcode* default.conf
        rm -rf fast-qrcode fast-qrcode.exe
        echo "::set-output name=status::success"
      env:
        APP_VERSION: ${{ steps.get_version.outputs.APP_VERSION }}
    - name: Upload
      uses: actions/upload-artifact@v2
      if: steps.go_build.outputs.status == 'success' && !cancelled()
      with:
        name: fast-qrcode_$APP_VERSION_${{ matrix.os }}_${{ matrix.arch }}.tar.gz
        path: fast-qrcode_$APP_VERSION_${{ matrix.os }}_${{ matrix.arch }}.tar.gz
      env:
        APP_VERSION: ${{ steps.get_version.outputs.APP_VERSION }}